org: webcodes.io
service: scheduler-api

frameworkVersion: '2'

plugins:
  - serverless-mocha-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: dev
  memorySize: 256
  lambdaHashingVersion: 20201221
  environment:
    POSTGRESQL_HOST: ${self:custom.POSTGRESQL.HOST}
    POSTGRESQL_PORT: ${self:custom.POSTGRESQL.PORT}
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.USERNAME}
    PASSWORD: ${self:custom.PASSWORD}

custom:
  DB_NAME: scheduler
  USERNAME: master
  PASSWORD: password
  POSTGRESQL:
    HOST:
      !GetAtt PostgreSqlRDSInstance.Endpoint.Address
    PORT:
      !GetAtt PostgreSqlRDSInstance.Endpoint.Port

functions:
  auth:
    handler: auth/auth.auth

  create:
    handler: controllers/create-employee.create
    events:
      - http:
          path: employee
          method: put
          cors: true
          integration: LAMBDA

  list:
    handler: controllers/list-all-employees.list
    events:
      - http:
          path: employees
          method: get
          cors: true
          integration: LAMBDA

  getByEmployeeId:
    handler: controllers/get-employee-info.getByEmployeeId
    events:
      - http:
          path: employee/{id}
          method: get
          cors: true
          integration: LAMBDA

  update:
    handler: controllers/update-employee.update
    events:
      - http:
          path: employee/{id}
          method: post
          cors: true
          integration: LAMBDA

  delete:
    handler: controllers/delete-employee.delete
    events:
      - http:
          path: employee/{id}
          method: delete
          cors: true
          integration: LAMBDA

resources:
  Resources:
    LambdaRole: ${file(./resource/LambdaRole.yml)}
    ServerlessVPC: ${file(./resource/ServerlessVPC.yml)}
    ServerlessSecurityGroup: ${file(./resource/ServerlessSecurityGroup.yml)}

    PostgreSqlRDSInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        MasterUsername: ${self:custom.USERNAME}
        MasterUserPassword: ${self:custom.PASSWORD}
        AllocatedStorage: 20
        DBName: ${self:custom.DB_NAME}
        DBInstanceClass: db.t3.micro
        Engine: postgres
        PubliclyAccessible: false
